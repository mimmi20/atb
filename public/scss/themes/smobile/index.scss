@use "sass:math";
@use "sass:map";

@use "../../fonts/montserrat";
@use "../../mixins/layer";
@use "../../mixins/form";
@use "../../mixins/accordion";
@use "../../mixins/percentage";
@use "../../mixins/addition";
@use "../../mixins/circular-chart";
@use "../../mixins/progress-chart";
@use "../../mixins/capacity-container";
@use "../../mixins/headline";
@use "../../mixins/result";
@use "../../mixins/customize";
@use "../../functions/functions" as internalFunctions;
@use "variables";
@use "../../../../node_modules/bootstrap/scss/bootstrap" with (
    $grid-breakpoints: variables.$grid-breakpoints,
    $container-max-widths: variables.$container-max-widths,
    $blue: variables.$blue,
    $purple: variables.$purple,
    $pink: variables.$pink,
    $red: variables.$red,
    $orange: variables.$orange,
    $yellow: variables.$yellow,
    $green: variables.$green,
    $teal: variables.$teal,
    $primary: variables.$primary,
    $secondary: variables.$secondary,
    $success: variables.$success,
    $info: variables.$info,
    $warning: variables.$warning,
    $danger: variables.$danger,
    $font-family-sans-serif: variables.$font-family-sans-serif,
    $font-family-base: variables.$font-family-base,
    $font-weight-light: variables.$font-weight-light,
    $font-weight-bold: variables.$font-weight-bold,
    $white: variables.$white,
    $gray-100: variables.$gray-1,
    $gray-200: variables.$gray-2,
    $gray-300: variables.$gray-3,
    $gray-400: variables.$gray-4,
    $gray-500: variables.$gray-5,
    $gray-600: variables.$gray-6,
    $gray-700: variables.$gray-7,
    $gray-800: variables.$gray-8,
    $black: variables.$black,
    $body-bg: variables.$body-bg,
    $body-color: variables.$body-color,
    $link-color: variables.$link-color,
    $link-hover-color: variables.$link-hover-color,
    $btn-link-disabled-color: variables.$btn-link-disabled-color,
);
@include result.result(
    $link-color: variables.$primary,
    $result-color: map.get(variables.$result-container, color),
    $result-bg: map.get(variables.$result-container, bg),
    $hr-color: map.get(variables.$result-container, hr-color),
);
@include headline.headline(
    $font-size: map.get(variables.$result-headline, font-size),
    $font-weight: map.get(variables.$result-headline, font-weight),
);
@include capacity-container.capacityContainer(
    $font-size: map.get(variables.$capacity-container, font-size),
    $color: map.get(variables.$capacity-container, color),
    $current-rate-color: map.get(variables.$capacity-container, current-rate-color),
    $best-rate-color: map.get(variables.$capacity-container, best-rate-color),
);
@include progress-chart.progressChart(
    $bg: map.get(variables.$progress-chart, bg),
    $transition: map.get(variables.$progress-chart, transition),
    $current-rate-bg: map.get(variables.$progress-chart, current-rate-bg),
    $current-rate-color: map.get(variables.$progress-chart, current-rate-color),
    $current-rate-less-bg: map.get(variables.$progress-chart, current-rate-less-bg),
    $current-rate-less-color: map.get(variables.$progress-chart, current-rate-less-color),
    $best-rate-bg: map.get(variables.$progress-chart, best-rate-bg),
    $best-rate-color: map.get(variables.$progress-chart, best-rate-color),
    $font-size: map.get(variables.$progress-chart, font-size),
);
@include addition.addition(
    $bg: variables.$white,
    $grid-gutter-width: bootstrap.$grid-gutter-width,
);
@include circular-chart.circularChart(
    $stroke-width: map.get(variables.$circle-chart, stroke-width),
    $secondary-stroke: map.get(variables.$circle-chart, secondary-stroke),
    $secondary-stroke-linecap: map.get(variables.$circle-chart, secondary-stroke-linecap),
    $secondary-stroke-bg: map.get(variables.$circle-chart, secondary-bg-stroke),
    $primary-stroke: map.get(variables.$circle-chart, primary-stroke),
    $primary-stroke-linecap: map.get(variables.$circle-chart, primary-stroke-linecap),
    $primary-stroke-bg: map.get(variables.$circle-chart, primary-bg-stroke),
    $animation-name: map.get(variables.$circle-chart, animation-name),
);
@include percentage.percentage(
    $text-align: map.get(variables.$percentage, text-align),
    $font-size: map.get(variables.$percentage, font-size),
    $span-font-size: map.get(variables.$percentage, span-font-size),
    $primary-color: map.get(variables.$percentage, primary-color),
    $secondary-color: map.get(variables.$percentage, secondary-color),
);
@include form.default-form(
    $white: variables.$white,
    $primary: variables.$primary,
);
@include form.form(
    $formColor: variables.$secondary,
    $labelColor: variables.$gray-4,
    $formBorderColor: variables.$gray-2,
    $formDisabledColor: variables.$gray-2,
    $buttonHoverBackgroundColor: variables.$link-hover-color,
    $buttonBorderRadius: null,
    $tippColor: variables.$primary,
    $gray-3: variables.$gray-3,
    $white: variables.$white,
    $danger: variables.$danger,
    $primary: variables.$primary,
    $formDisabledBorderColor: null,
    $labelBorderWidth: null,
    $buttonColor: null,
    $tippFontSize: internalFunctions.to-rem(12px),
    $formDisabledBackgroundColor: variables.$gray-2,
    $imageBackgroundColor: #005e98,
);
@include layer.default-layer(
    $type-icon-bg: map.get(variables.$layer, type-icon-bg),
    $type-text-color: map.get(variables.$layer, type-text-color),
    $type-text-text-decoration: map.get(variables.$layer, type-text-text-decoration),
    $layer-bg: map.get(variables.$layer, layer-bg),
    $content-font-size: map.get(variables.$layer, content-font-size),
    $header-border: map.get(variables.$layer, header-border),
    $close-transition-color: map.get(variables.$layer, close-transition-color),
    $close-transition-level: map.get(variables.$layer, close-transition-level),
    $close-transition-bg: map.get(variables.$layer, close-transition-bg),
    $close-size: map.get(variables.$layer, close-size),
    $headline-primary-color: map.get(variables.$layer, headline-primary-color),
    $headline-secondary-color: map.get(variables.$layer, headline-secondary-color),
    $list-color: map.get(variables.$layer, list-color),
    $text-weight: map.get(variables.$layer, text-weight),
    $grid-gutter-width: bootstrap.$grid-gutter-width,
    $danger: variables.$danger,
    $success: variables.$success,
    $warning: variables.$warning,
    $white: variables.$white,
);
@include accordion.accordion(
    $bg: map.get(variables.$accordion, bg),
    $transition: map.get(variables.$accordion, transition),
    $max-height-transition: map.get(variables.$accordion, max-height-transition),
    $trigger-font-size: map.get(variables.$accordion, trigger-font-size),
    $header-font-size: map.get(variables.$accordion, header-font-size),
    $header-color: map.get(variables.$accordion, header-color),
);
@include customize.customize(
    $body-color: variables.$white,
    $headline-primary-font-size: internalFunctions.to-rem(24px),
    $headline-secondary-font-size: internalFunctions.to-rem(14px),
    $headline-primary-color: variables.$primary,
    $headline-secondary-color: variables.$gray-7,
);
